"""bugfix

Revision ID: ae5e0b09370f
Revises: d1ad78fb1101
Create Date: 2023-11-30 17:24:05.372817

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ae5e0b09370f"
down_revision: Union[str, None] = "d1ad78fb1101"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "TareGroup",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_TareGroup_id"), "TareGroup", ["id"], unique=False)
    op.create_index(
        op.f("ix_TareGroup_name"), "TareGroup", ["name"], unique=True
    )
    op.alter_column(
        "ActorAccessLevel",
        "task_target_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "ActorAccessLevel",
        "role",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "read",
            "create",
            "edit",
            "execute",
            "inspect",
            "delete",
            name="accessrole",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "DefaultActor", "name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_comment",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_start_execution",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_complete_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.add_column(
        "Discount",
        sa.Column(
            "type",
            sa.Enum(
                "seasonal",
                "combo",
                "promocode",
                "nth_for_free",
                "subscription",
                "personal",
                "bonuses",
                name="discounttype",
            ),
            nullable=False,
        ),
    )
    op.create_index(
        op.f("ix_Discount_type"), "Discount", ["type"], unique=False
    )
    op.alter_column(
        "Material",
        "unit",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum("kg", "pcs", "liter", name="itemunit"),
        existing_nullable=False,
    )
    op.alter_column(
        "Material",
        "best_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Product",
        "price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "Product",
        "sale",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "Product",
        "best_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Product",
        "status",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "active",
            "seasonal_active",
            "seasonal_inactive",
            "inactive",
            "deleted",
            "out_of_stock",
            name="productstatus",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "ProductIngridient",
        "edit_price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "ProductIngridient",
        "max_change",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.alter_column(
        "RestaurantEmployee",
        "fired_date",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "RestaurantEmployee",
        "restaurant_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "RestaurantEmployeePositionAccessLevel",
        "role",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "read",
            "create",
            "edit",
            "execute",
            "inspect",
            "delete",
            name="accessrole",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "RestaurantExternalDepartment",
        "type",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "hall",
            "drive_thru",
            "pickup",
            "delivery",
            name="restarauntexternaldepartmenttype",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "Salary",
        "bonus",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )
    op.add_column("Tare", sa.Column("group_id", sa.Integer(), nullable=False))
    op.create_index(
        op.f("ix_Tare_group_id"), "Tare", ["group_id"], unique=False
    )
    op.create_foreign_key(None, "Tare", "TareGroup", ["group_id"], ["id"])
    op.alter_column(
        "Task", "comment", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "Task",
        "start_execution",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Task",
        "execution_started",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Task",
        "complete_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Task",
        "completed",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "Task",
        "approved",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "TaskType", "name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "User", "phone", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "User", "telegram", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "User", "lname", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "User", "sname", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "User", "gender", existing_type=sa.BOOLEAN(), nullable=False
    )
    op.alter_column(
        "User", "address", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "User", "deleted", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "Verification",
        "field_name",
        existing_type=sa.VARCHAR(),
        type_=sa.Enum(
            "email",
            "phone",
            "telegram",
            "address",
            name="verificationfieldname",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "WriteOffReason",
        "descritption",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "WriteOffReason",
        "descritption",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "Verification",
        "field_name",
        existing_type=sa.Enum(
            "email",
            "phone",
            "telegram",
            "address",
            name="verificationfieldname",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "User", "deleted", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "User", "address", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "User", "gender", existing_type=sa.BOOLEAN(), nullable=True
    )
    op.alter_column("User", "sname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("User", "lname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "User", "telegram", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column("User", "phone", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "TaskType", "name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "Task", "approved", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "Task",
        "completed",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Task",
        "complete_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Task",
        "execution_started",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Task",
        "start_execution",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Task", "comment", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_constraint(None, "Tare", type_="foreignkey")
    op.drop_index(op.f("ix_Tare_group_id"), table_name="Tare")
    op.drop_column("Tare", "group_id")
    op.alter_column(
        "Salary",
        "bonus",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "RestaurantExternalDepartment",
        "type",
        existing_type=sa.Enum(
            "hall",
            "drive_thru",
            "pickup",
            "delivery",
            name="restarauntexternaldepartmenttype",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "RestaurantEmployeePositionAccessLevel",
        "role",
        existing_type=sa.Enum(
            "read",
            "create",
            "edit",
            "execute",
            "inspect",
            "delete",
            name="accessrole",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "RestaurantEmployee",
        "restaurant_id",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "RestaurantEmployee",
        "fired_date",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "ProductIngridient",
        "max_change",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "ProductIngridient",
        "edit_price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "Product",
        "status",
        existing_type=sa.Enum(
            "active",
            "seasonal_active",
            "seasonal_inactive",
            "inactive",
            "deleted",
            "out_of_stock",
            name="productstatus",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "Product",
        "best_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Product",
        "sale",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "Product",
        "price",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column(
        "Material",
        "best_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "Material",
        "unit",
        existing_type=sa.Enum("kg", "pcs", "liter", name="itemunit"),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_Discount_type"), table_name="Discount")
    op.drop_column("Discount", "type")
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_complete_before",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_start_execution",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "DefaultActorTaskDelegation",
        "task_comment",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "DefaultActor", "name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "ActorAccessLevel",
        "role",
        existing_type=sa.Enum(
            "read",
            "create",
            "edit",
            "execute",
            "inspect",
            "delete",
            name="accessrole",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "ActorAccessLevel",
        "task_target_id",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.drop_index(op.f("ix_TareGroup_name"), table_name="TareGroup")
    op.drop_index(op.f("ix_TareGroup_id"), table_name="TareGroup")
    op.drop_table("TareGroup")
    # ### end Alembic commands ###
