"""task distribution

Revision ID: 68dd24a48bb9
Revises: 5bcfd08e3a6e
Create Date: 2023-11-27 12:46:58.242567

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "68dd24a48bb9"
down_revision: Union[str, None] = "5bcfd08e3a6e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "RestaurantEmployeePosition",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("salary", sa.Float(), nullable=False),
        sa.Column("expierence_coefficient", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_RestaurantEmployeePosition_id"),
        "RestaurantEmployeePosition",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantEmployeePosition_name"),
        "RestaurantEmployeePosition",
        ["name"],
        unique=True,
    )
    op.create_table(
        "TaskTargetType",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_TaskTargetType_id"), "TaskTargetType", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_TaskTargetType_name"), "TaskTargetType", ["name"], unique=True
    )
    op.create_table(
        "TaskTypeGroup",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_TaskTypeGroup_id"), "TaskTypeGroup", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_TaskTypeGroup_name"), "TaskTypeGroup", ["name"], unique=True
    )
    op.create_table(
        "RestaurantEmployeePositionAccessLevel",
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.Column("task_type_group_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["RestaurantEmployeePosition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_type_group_id"],
            ["TaskTypeGroup.id"],
        ),
        sa.PrimaryKeyConstraint("position_id", "task_type_group_id"),
    )
    op.create_index(
        op.f("ix_RestaurantEmployeePositionAccessLevel_role"),
        "RestaurantEmployeePositionAccessLevel",
        ["role"],
        unique=False,
    )
    op.create_table(
        "SupplyOrder",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_target_id"],
            ["TaskTarget.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_SupplyOrder_id"), "SupplyOrder", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_SupplyOrder_task_target_id"),
        "SupplyOrder",
        ["task_target_id"],
        unique=True,
    )
    op.create_table(
        "TaskTargetTypeTarget",
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["target_id"],
            ["TaskTarget.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["TaskTargetType.id"],
        ),
        sa.PrimaryKeyConstraint("type_id", "target_id"),
    )
    op.create_table(
        "TaskTypeGroupTask",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["TaskTypeGroup.id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["TaskType.id"],
        ),
        sa.PrimaryKeyConstraint("group_id", "type_id"),
    )
    op.create_table(
        "DefaultActorTaskDelegation",
        sa.Column("default_actor_id", sa.Integer(), nullable=False),
        sa.Column("incoming_task_type_id", sa.Integer(), nullable=False),
        sa.Column("outcoming_task_type_id", sa.Integer(), nullable=False),
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("filter_", sa.String(), nullable=True),
        sa.Column("attachments_type_name", sa.String(), nullable=False),
        sa.Column("task_name", sa.String(), nullable=False),
        sa.Column("task_comment", sa.String(), nullable=True),
        sa.Column("task_start_execution", sa.DateTime(), nullable=True),
        sa.Column("task_fail_on_late_start", sa.Boolean(), nullable=False),
        sa.Column("task_complete_before", sa.DateTime(), nullable=True),
        sa.Column("task_fail_on_late_complete", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["default_actor_id"],
            ["DefaultActor.id"],
        ),
        sa.ForeignKeyConstraint(
            ["incoming_task_type_id"],
            ["TaskType.id"],
        ),
        sa.ForeignKeyConstraint(
            ["outcoming_task_type_id"],
            ["TaskType.id"],
        ),
        sa.PrimaryKeyConstraint(
            "default_actor_id",
            "incoming_task_type_id",
            "outcoming_task_type_id",
        ),
    )
    op.create_index(
        op.f("ix_DefaultActorTaskDelegation_task_start_execution"),
        "DefaultActorTaskDelegation",
        ["task_start_execution"],
        unique=False,
    )
    op.create_table(
        "Restaurant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("default_actor_id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("accepts_online_orders", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["default_actor_id"],
            ["DefaultActor.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_Restaurant_accepts_online_orders"),
        "Restaurant",
        ["accepts_online_orders"],
        unique=False,
    )
    op.create_index(
        op.f("ix_Restaurant_address"), "Restaurant", ["address"], unique=True
    )
    op.create_index(
        op.f("ix_Restaurant_default_actor_id"),
        "Restaurant",
        ["default_actor_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_Restaurant_id"), "Restaurant", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_Restaurant_url"), "Restaurant", ["url"], unique=True
    )
    op.create_table(
        "SupplyOrderItem",
        sa.Column("supply_order_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["Item.id"],
        ),
        sa.ForeignKeyConstraint(
            ["supply_order_id"],
            ["SupplyOrder.id"],
        ),
        sa.PrimaryKeyConstraint("supply_order_id", "item_id"),
    )
    op.create_table(
        "MaterialStockBalance",
        sa.Column("material_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("balance", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["Material.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("material_id", "restaurant_id"),
    )
    op.create_table(
        "RestaurantDiscount",
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("discount_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["discount_id"],
            ["Discount.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("restaurant_id", "discount_id"),
    )
    op.create_table(
        "RestaurantEmployee",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("hiring_date", sa.DateTime(), nullable=False),
        sa.Column("fired_date", sa.DateTime(), nullable=True),
        sa.Column("on_shift", sa.Boolean(), nullable=False),
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["RestaurantEmployeePosition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_RestaurantEmployee_id"),
        "RestaurantEmployee",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantEmployee_on_shift"),
        "RestaurantEmployee",
        ["on_shift"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantEmployee_position_id"),
        "RestaurantEmployee",
        ["position_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantEmployee_restaurant_id"),
        "RestaurantEmployee",
        ["restaurant_id"],
        unique=False,
    )
    op.create_table(
        "RestaurantExternalDepartment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("default_actor_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["default_actor_id"],
            ["DefaultActor.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartment_default_actor_id"),
        "RestaurantExternalDepartment",
        ["default_actor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartment_id"),
        "RestaurantExternalDepartment",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartment_restaurant_id"),
        "RestaurantExternalDepartment",
        ["restaurant_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartment_type"),
        "RestaurantExternalDepartment",
        ["type"],
        unique=False,
    )
    op.create_table(
        "RestaurantInternalDepartment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("default_actor_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["default_actor_id"],
            ["DefaultActor.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_RestaurantInternalDepartment_default_actor_id"),
        "RestaurantInternalDepartment",
        ["default_actor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantInternalDepartment_id"),
        "RestaurantInternalDepartment",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantInternalDepartment_name"),
        "RestaurantInternalDepartment",
        ["name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantInternalDepartment_restaurant_id"),
        "RestaurantInternalDepartment",
        ["restaurant_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantInternalDepartment_type"),
        "RestaurantInternalDepartment",
        ["type"],
        unique=False,
    )
    op.create_table(
        "RestaurantProduct",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("suspended", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["Product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["restaurant_id"],
            ["Restaurant.id"],
        ),
        sa.PrimaryKeyConstraint("restaurant_id", "product_id"),
    )
    op.create_index(
        op.f("ix_RestaurantProduct_suspended"),
        "RestaurantProduct",
        ["suspended"],
        unique=False,
    )
    op.create_table(
        "RestaurantExternalDepartmentWorkingHours",
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column(
            "weekday",
            sa.Enum(
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                name="weekday",
            ),
            nullable=False,
        ),
        sa.Column("start", sa.Time(), nullable=False),
        sa.Column("finish", sa.Time(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["RestaurantExternalDepartment.id"],
        ),
        sa.PrimaryKeyConstraint("department_id", "weekday"),
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartmentWorkingHours_finish"),
        "RestaurantExternalDepartmentWorkingHours",
        ["finish"],
        unique=False,
    )
    op.create_index(
        op.f("ix_RestaurantExternalDepartmentWorkingHours_start"),
        "RestaurantExternalDepartmentWorkingHours",
        ["start"],
        unique=False,
    )
    op.create_table(
        "RestaurantInternalSubDepartment",
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("child_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_id"],
            ["RestaurantInternalDepartment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["RestaurantInternalDepartment.id"],
        ),
        sa.PrimaryKeyConstraint("child_id", "parent_id"),
    )
    op.drop_index("ix_Deliveryman_current_order_id", table_name="Deliveryman")
    op.drop_index("ix_Deliveryman_employee_id", table_name="Deliveryman")
    op.drop_index("ix_Deliveryman_id", table_name="Deliveryman")
    op.drop_table("Deliveryman")
    op.drop_table("KitchenOrderMaterial")
    op.drop_index("ix_Employee_id", table_name="Employee")
    op.drop_index("ix_Employee_on_shift", table_name="Employee")
    op.drop_index("ix_Employee_position_id", table_name="Employee")
    op.drop_table("Employee")
    op.drop_index("ix_Shift_id", table_name="Shift")
    op.drop_index("ix_Shift_task_target_id", table_name="Shift")
    op.drop_table("Shift")
    op.drop_index("ix_EmployeePosition_id", table_name="EmployeePosition")
    op.drop_index("ix_EmployeePosition_name", table_name="EmployeePosition")
    op.drop_table("EmployeePosition")
    op.drop_index(
        "ix_EmployeePositionAccessLevel_role",
        table_name="EmployeePositionAccessLevel",
    )
    op.drop_table("EmployeePositionAccessLevel")
    op.drop_table("KitchenAreaProductCategory")
    op.drop_index("ix_KitchenOrder_id", table_name="KitchenOrder")
    op.drop_index("ix_KitchenOrder_task_target_id", table_name="KitchenOrder")
    op.drop_table("KitchenOrder")
    op.drop_index("ix_KitchenArea_actor_id", table_name="KitchenArea")
    op.drop_index("ix_KitchenArea_id", table_name="KitchenArea")
    op.drop_index("ix_KitchenArea_name", table_name="KitchenArea")
    op.drop_table("KitchenArea")
    op.add_column(
        "CustomerOrder",
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
    )
    op.create_index(
        op.f("ix_CustomerOrder_restaurant_id"),
        "CustomerOrder",
        ["restaurant_id"],
        unique=False,
    )
    op.create_foreign_key(
        None, "CustomerOrder", "Restaurant", ["restaurant_id"], ["id"]
    )
    op.add_column(
        "DefaultActor", sa.Column("actor_id", sa.Integer(), nullable=False)
    )
    op.create_index(
        op.f("ix_DefaultActor_actor_id"),
        "DefaultActor",
        ["actor_id"],
        unique=True,
    )
    op.drop_constraint(
        "DefaultActor_id_fkey", "DefaultActor", type_="foreignkey"
    )
    op.create_foreign_key(None, "DefaultActor", "Actor", ["actor_id"], ["id"])
    op.drop_column("Material", "stock_balance")
    op.add_column(
        "Salary",
        sa.Column("restaurant_employee_id", sa.Integer(), nullable=False),
    )
    op.drop_index("ix_Salary_employee_id", table_name="Salary")
    op.create_index(
        op.f("ix_Salary_restaurant_employee_id"),
        "Salary",
        ["restaurant_employee_id"],
        unique=False,
    )
    op.drop_constraint("Salary_employee_id_fkey", "Salary", type_="foreignkey")
    op.create_foreign_key(
        None,
        "Salary",
        "RestaurantEmployee",
        ["restaurant_employee_id"],
        ["id"],
    )
    op.drop_column("Salary", "employee_id")
    op.add_column(
        "Supply", sa.Column("restaurant_id", sa.Integer(), nullable=False)
    )
    op.create_index(
        op.f("ix_Supply_restaurant_id"),
        "Supply",
        ["restaurant_id"],
        unique=False,
    )
    op.create_foreign_key(
        None, "Supply", "Restaurant", ["restaurant_id"], ["id"]
    )
    op.drop_index("ix_Table_number", table_name="Table")
    op.create_index(op.f("ix_Table_number"), "Table", ["number"], unique=False)
    op.add_column(
        "TableLocation",
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
    )
    op.create_index(
        op.f("ix_TableLocation_restaurant_id"),
        "TableLocation",
        ["restaurant_id"],
        unique=False,
    )
    op.create_foreign_key(
        None, "TableLocation", "Restaurant", ["restaurant_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "TableLocation", type_="foreignkey")
    op.drop_index(
        op.f("ix_TableLocation_restaurant_id"), table_name="TableLocation"
    )
    op.drop_column("TableLocation", "restaurant_id")
    op.drop_index(op.f("ix_Table_number"), table_name="Table")
    op.create_index("ix_Table_number", "Table", ["number"], unique=False)
    op.drop_constraint(None, "Supply", type_="foreignkey")
    op.drop_index(op.f("ix_Supply_restaurant_id"), table_name="Supply")
    op.drop_column("Supply", "restaurant_id")
    op.add_column(
        "Salary",
        sa.Column(
            "employee_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "Salary", type_="foreignkey")
    op.create_foreign_key(
        "Salary_employee_id_fkey",
        "Salary",
        "Employee",
        ["employee_id"],
        ["id"],
    )
    op.drop_index(
        op.f("ix_Salary_restaurant_employee_id"), table_name="Salary"
    )
    op.create_index(
        "ix_Salary_employee_id", "Salary", ["employee_id"], unique=False
    )
    op.drop_column("Salary", "restaurant_employee_id")
    op.add_column(
        "Material",
        sa.Column(
            "stock_balance",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "DefaultActor", type_="foreignkey")
    op.create_foreign_key(
        "DefaultActor_id_fkey", "DefaultActor", "Actor", ["id"], ["id"]
    )
    op.drop_index(op.f("ix_DefaultActor_actor_id"), table_name="DefaultActor")
    op.drop_column("DefaultActor", "actor_id")
    op.drop_constraint(None, "CustomerOrder", type_="foreignkey")
    op.drop_index(
        op.f("ix_CustomerOrder_restaurant_id"), table_name="CustomerOrder"
    )
    op.drop_column("CustomerOrder", "restaurant_id")
    op.create_table(
        "KitchenArea",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"KitchenArea_id_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "actor_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"], ["Actor.id"], name="KitchenArea_actor_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="KitchenArea_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_KitchenArea_name", "KitchenArea", ["name"], unique=False
    )
    op.create_index("ix_KitchenArea_id", "KitchenArea", ["id"], unique=False)
    op.create_index(
        "ix_KitchenArea_actor_id", "KitchenArea", ["actor_id"], unique=False
    )
    op.create_table(
        "KitchenOrder",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"KitchenOrder_id_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "task_target_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_target_id"],
            ["TaskTarget.id"],
            name="KitchenOrder_task_target_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="KitchenOrder_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_KitchenOrder_task_target_id",
        "KitchenOrder",
        ["task_target_id"],
        unique=False,
    )
    op.create_index("ix_KitchenOrder_id", "KitchenOrder", ["id"], unique=False)
    op.create_table(
        "KitchenAreaProductCategory",
        sa.Column(
            "kitchen_area_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "product_category_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["kitchen_area_id"],
            ["KitchenArea.id"],
            name="KitchenAreaProductCategory_kitchen_area_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["product_category_id"],
            ["ProductCategory.id"],
            name="KitchenAreaProductCategory_product_category_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "kitchen_area_id",
            "product_category_id",
            name="KitchenAreaProductCategory_pkey",
        ),
    )
    op.create_table(
        "EmployeePositionAccessLevel",
        sa.Column(
            "position_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "task_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("role", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["EmployeePosition.id"],
            name="EmployeePositionAccessLevel_position_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["task_type_id"],
            ["TaskType.id"],
            name="EmployeePositionAccessLevel_task_type_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "position_id",
            "task_type_id",
            name="EmployeePositionAccessLevel_pkey",
        ),
    )
    op.create_index(
        "ix_EmployeePositionAccessLevel_role",
        "EmployeePositionAccessLevel",
        ["role"],
        unique=False,
    )
    op.create_table(
        "EmployeePosition",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"EmployeePosition_id_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "salary",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "expierence_coefficient",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="EmployeePosition_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_EmployeePosition_name", "EmployeePosition", ["name"], unique=False
    )
    op.create_index(
        "ix_EmployeePosition_id", "EmployeePosition", ["id"], unique=False
    )
    op.create_table(
        "Shift",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('\"Shift_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "task_target_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_target_id"],
            ["TaskTarget.id"],
            name="Shift_task_target_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="Shift_pkey"),
    )
    op.create_index(
        "ix_Shift_task_target_id", "Shift", ["task_target_id"], unique=False
    )
    op.create_index("ix_Shift_id", "Shift", ["id"], unique=False)
    op.create_table(
        "Employee",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('\"Employee_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "hiring_date",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "fired_date",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "on_shift", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "position_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["position_id"],
            ["EmployeePosition.id"],
            name="Employee_position_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["User.id"], name="Employee_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="Employee_pkey"),
        sa.UniqueConstraint("user_id", name="Employee_user_id_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_Employee_position_id", "Employee", ["position_id"], unique=False
    )
    op.create_index(
        "ix_Employee_on_shift", "Employee", ["on_shift"], unique=False
    )
    op.create_index("ix_Employee_id", "Employee", ["id"], unique=False)
    op.create_table(
        "KitchenOrderMaterial",
        sa.Column(
            "kitchen_order_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "material_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "count",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["kitchen_order_id"],
            ["KitchenOrder.id"],
            name="KitchenOrderMaterial_kitchen_order_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["material_id"],
            ["Material.id"],
            name="KitchenOrderMaterial_material_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "kitchen_order_id", "material_id", name="KitchenOrderMaterial_pkey"
        ),
    )
    op.create_table(
        "Deliveryman",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"Deliveryman_id_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "employee_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "geolocation", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "current_order_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["current_order_id"],
            ["OnlineOrder.id"],
            name="Deliveryman_current_order_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["Employee.id"],
            name="Deliveryman_employee_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="Deliveryman_pkey"),
    )
    op.create_index("ix_Deliveryman_id", "Deliveryman", ["id"], unique=False)
    op.create_index(
        "ix_Deliveryman_employee_id",
        "Deliveryman",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        "ix_Deliveryman_current_order_id",
        "Deliveryman",
        ["current_order_id"],
        unique=False,
    )
    op.drop_table("RestaurantInternalSubDepartment")
    op.drop_index(
        op.f("ix_RestaurantExternalDepartmentWorkingHours_start"),
        table_name="RestaurantExternalDepartmentWorkingHours",
    )
    op.drop_index(
        op.f("ix_RestaurantExternalDepartmentWorkingHours_finish"),
        table_name="RestaurantExternalDepartmentWorkingHours",
    )
    op.drop_table("RestaurantExternalDepartmentWorkingHours")
    op.drop_index(
        op.f("ix_RestaurantProduct_suspended"), table_name="RestaurantProduct"
    )
    op.drop_table("RestaurantProduct")
    op.drop_index(
        op.f("ix_RestaurantInternalDepartment_type"),
        table_name="RestaurantInternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantInternalDepartment_restaurant_id"),
        table_name="RestaurantInternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantInternalDepartment_name"),
        table_name="RestaurantInternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantInternalDepartment_id"),
        table_name="RestaurantInternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantInternalDepartment_default_actor_id"),
        table_name="RestaurantInternalDepartment",
    )
    op.drop_table("RestaurantInternalDepartment")
    op.drop_index(
        op.f("ix_RestaurantExternalDepartment_type"),
        table_name="RestaurantExternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantExternalDepartment_restaurant_id"),
        table_name="RestaurantExternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantExternalDepartment_id"),
        table_name="RestaurantExternalDepartment",
    )
    op.drop_index(
        op.f("ix_RestaurantExternalDepartment_default_actor_id"),
        table_name="RestaurantExternalDepartment",
    )
    op.drop_table("RestaurantExternalDepartment")
    op.drop_index(
        op.f("ix_RestaurantEmployee_restaurant_id"),
        table_name="RestaurantEmployee",
    )
    op.drop_index(
        op.f("ix_RestaurantEmployee_position_id"),
        table_name="RestaurantEmployee",
    )
    op.drop_index(
        op.f("ix_RestaurantEmployee_on_shift"), table_name="RestaurantEmployee"
    )
    op.drop_index(
        op.f("ix_RestaurantEmployee_id"), table_name="RestaurantEmployee"
    )
    op.drop_table("RestaurantEmployee")
    op.drop_table("RestaurantDiscount")
    op.drop_table("MaterialStockBalance")
    op.drop_table("SupplyOrderItem")
    op.drop_index(op.f("ix_Restaurant_url"), table_name="Restaurant")
    op.drop_index(op.f("ix_Restaurant_id"), table_name="Restaurant")
    op.drop_index(
        op.f("ix_Restaurant_default_actor_id"), table_name="Restaurant"
    )
    op.drop_index(op.f("ix_Restaurant_address"), table_name="Restaurant")
    op.drop_index(
        op.f("ix_Restaurant_accepts_online_orders"), table_name="Restaurant"
    )
    op.drop_table("Restaurant")
    op.drop_index(
        op.f("ix_DefaultActorTaskDelegation_task_start_execution"),
        table_name="DefaultActorTaskDelegation",
    )
    op.drop_table("DefaultActorTaskDelegation")
    op.drop_table("TaskTypeGroupTask")
    op.drop_table("TaskTargetTypeTarget")
    op.drop_index(
        op.f("ix_SupplyOrder_task_target_id"), table_name="SupplyOrder"
    )
    op.drop_index(op.f("ix_SupplyOrder_id"), table_name="SupplyOrder")
    op.drop_table("SupplyOrder")
    op.drop_index(
        op.f("ix_RestaurantEmployeePositionAccessLevel_role"),
        table_name="RestaurantEmployeePositionAccessLevel",
    )
    op.drop_table("RestaurantEmployeePositionAccessLevel")
    op.drop_index(op.f("ix_TaskTypeGroup_name"), table_name="TaskTypeGroup")
    op.drop_index(op.f("ix_TaskTypeGroup_id"), table_name="TaskTypeGroup")
    op.drop_table("TaskTypeGroup")
    op.drop_index(op.f("ix_TaskTargetType_name"), table_name="TaskTargetType")
    op.drop_index(op.f("ix_TaskTargetType_id"), table_name="TaskTargetType")
    op.drop_table("TaskTargetType")
    op.drop_index(
        op.f("ix_RestaurantEmployeePosition_name"),
        table_name="RestaurantEmployeePosition",
    )
    op.drop_index(
        op.f("ix_RestaurantEmployeePosition_id"),
        table_name="RestaurantEmployeePosition",
    )
    op.drop_table("RestaurantEmployeePosition")
    # ### end Alembic commands ###
